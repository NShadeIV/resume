# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.11
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:9.9.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~

    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
            
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile && yarn build
          
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  test:
    docker:
      - image: circleci/node:9.9.0
    working_directory: ~
    steps:
      - yarn test
      
  deploy:
    docker:
      - image: circleci/node:9.9.0
    working_directory: ~
    steps:
      - checkout
      
      # https://circleci.com/docs/2.0/deployment-integrations/#aws-s3-orb
      - aws-s3/sync:
          from: build
          to: 's3://www.andrewnfabiny.com'
          # excluding all files without a "." in them
          # because they are likely redirects and need
          # preserve metadata
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400" \
            --exclude "*" \
            --include "*.*" \
            --include ".*"
          overwrite: true

workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test:
          requires:
            - build
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: master